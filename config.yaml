connectors: {}
exporters:
    debug:
        sampling_initial: 2
        sampling_thereafter: 1
        use_internal_logger: true
    otlphttp/logs:
        compression: gzip
        encoding: proto
        endpoint: http://logs.intg-scp-kr.obv.cnct.cloud
        headers: {}
        idle_conn_timeout: 1m30s
        logs_endpoint: ""
        max_idle_conns: 100
        metrics_endpoint: ""
        retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_elapsed_time: 5m0s
            max_interval: 30s
            multiplier: 1.5
            randomization_factor: 0.5
        sending_queue:
            batch: null
            block_on_overflow: false
            blocking: false
            enabled: true
            num_consumers: 10
            queue_size: 1000
            sizer: {}
            storage: null
            wait_for_result: false
        timeout: 30s
        traces_endpoint: ""
        write_buffer_size: 524288
    otlphttp/metrics:
        compression: gzip
        encoding: proto
        endpoint: http://metrics.intg-scp-kr.obv.cnct.cloud
        headers: {}
        idle_conn_timeout: 1m30s
        logs_endpoint: ""
        max_idle_conns: 100
        metrics_endpoint: ""
        retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_elapsed_time: 5m0s
            max_interval: 30s
            multiplier: 1.5
            randomization_factor: 0.5
        sending_queue:
            batch: null
            block_on_overflow: false
            blocking: false
            enabled: true
            num_consumers: 10
            queue_size: 1000
            sizer: {}
            storage: null
            wait_for_result: false
        timeout: 30s
        traces_endpoint: ""
        write_buffer_size: 524288
    otlphttp/syslog:
        compression: gzip
        encoding: proto
        endpoint: http://syslog.intg-scp-kr.obv.cnct.cloud
        headers: {}
        idle_conn_timeout: 1m30s
        logs_endpoint: ""
        max_idle_conns: 100
        metrics_endpoint: ""
        retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_elapsed_time: 5m0s
            max_interval: 30s
            multiplier: 1.5
            randomization_factor: 0.5
        sending_queue:
            batch: null
            block_on_overflow: false
            blocking: false
            enabled: true
            num_consumers: 10
            queue_size: 1000
            sizer: {}
            storage: null
            wait_for_result: false
        timeout: 30s
        traces_endpoint: ""
        write_buffer_size: 524288
    otlphttp/traces:
        compression: gzip
        encoding: proto
        endpoint: http://traces.intg-scp-kr.obv.cnct.cloud
        headers: {}
        idle_conn_timeout: 1m30s
        logs_endpoint: ""
        max_idle_conns: 100
        metrics_endpoint: ""
        retry_on_failure:
            enabled: true
            initial_interval: 5s
            max_elapsed_time: 5m0s
            max_interval: 30s
            multiplier: 1.5
            randomization_factor: 0.5
        sending_queue:
            batch: null
            block_on_overflow: false
            blocking: false
            enabled: true
            num_consumers: 10
            queue_size: 1000
            sizer: {}
            storage: null
            wait_for_result: false
        timeout: 30s
        traces_endpoint: ""
        write_buffer_size: 524288
    prometheus:
        add_metric_suffixes: true
        const_labels: {}
        cors: null
        enable_open_metrics: false
        endpoint: 0.0.0.0:8889
        idle_timeout: 0s
        metric_expiration: 5m0s
        namespace: ""
        read_header_timeout: 0s
        resource_to_telemetry_conversion:
            enabled: false
        response_headers: {}
        send_timestamps: false
        tls: null
        write_timeout: 0s
extensions:
    health_check:
        check_collector_pipeline:
            enabled: false
            exporter_failure_threshold: 5
            interval: 5m
        cors: null
        endpoint: 0.0.0.0:13133
        idle_timeout: 0s
        path: /
        read_header_timeout: 0s
        response_body: null
        response_headers: {}
        tls: null
        write_timeout: 0s
    opamp:
        agent_description:
            include_resource_attributes: false
            non_identifying_attributes:
                k8s.namespace: observability
        capabilities:
            reports_available_components: false
            reports_effective_config: true
            reports_health: true
        instance_uid: 9c46883c-9468-4865-90b6-524d97ef67a2
        ppid: 0
        ppid_poll_interval: 5s
        server:
            ws:
                endpoint: wss://obv.intg-scp-kr.obv.cnct.cloud/v1/opamp
                tls:
                    insecure_skip_verify: true
    pprof:
        block_profile_fraction: 0
        endpoint: 0.0.0.0:1777
        mutex_profile_fraction: 0
        save_to_file: ""
    zpages:
        cors: null
        endpoint: 0.0.0.0:55679
        expvar:
            enabled: false
        idle_timeout: 0s
        read_header_timeout: 0s
        response_headers: {}
        tls: null
        write_timeout: 0s
processors:
    batch:
        metadata_cardinality_limit: 1000
        metadata_keys: []
        send_batch_max_size: 10240
        send_batch_size: 8192
        timeout: 200ms
    filter:
        error_mode: ignore
        logs:
            exclude: null
            include:
                bodies: []
                match_type: ""
                record_attributes: []
                resource_attributes: []
                severity_number:
                    match_undefined: false
                    min: INFO
                severity_texts: []
            log_record: []
        metrics:
            datapoint: []
            exclude: null
            include: null
            metric: []
            regexp: null
        spans:
            exclude: null
            include: null
        traces:
            span: []
            spanevent: []
    k8sattributes:
        auth_type: serviceAccount
        context: ""
        exclude:
            pods:
                - name: jaeger-agent
                - name: jaeger-collector
        extract:
            annotations: []
            labels: []
            metadata:
                - k8s.namespace.name
                - k8s.deployment.name
                - k8s.statefulset.name
                - k8s.daemonset.name
                - k8s.cronjob.name
                - k8s.job.name
                - k8s.node.name
                - k8s.pod.name
                - k8s.pod.uid
                - k8s.pod.start_time
            otel_annotations: false
        filter:
            fields: []
            labels: []
            namespace: ""
            node: ""
            node_from_env_var: K8S_NODE_NAME
        passthrough: false
        pod_association:
            - sources:
                - from: resource_attribute
                  name: k8s.pod.ip
            - sources:
                - from: resource_attribute
                  name: k8s.pod.uid
            - sources:
                - from: connection
                  name: ""
        wait_for_metadata: false
        wait_for_metadata_timeout: 10s
    resource:
        attributes:
            - action: extract
              converted_type: ""
              from_attribute: ""
              from_context: ""
              key: k8s.pod.name
              pattern: ^(?P<service_name>.*?)\-(?P<others>.*)$
              value: null
            - action: insert
              converted_type: ""
              from_attribute: service_name
              from_context: ""
              key: service.name
              pattern: ""
              value: null
            - action: delete
              converted_type: ""
              from_attribute: ""
              from_context: ""
              key: service_name
              pattern: ""
              value: null
            - action: delete
              converted_type: ""
              from_attribute: ""
              from_context: ""
              key: others
              pattern: ""
              value: null
    resourcedetection:
        aks:
            resource_attributes:
                cloud.platform:
                    enabled: true
                cloud.provider:
                    enabled: true
                k8s.cluster.name:
                    enabled: false
        attributes: []
        azure:
            resource_attributes:
                azure.resourcegroup.name:
                    enabled: true
                azure.vm.name:
                    enabled: true
                azure.vm.scaleset.name:
                    enabled: true
                azure.vm.size:
                    enabled: true
                cloud.account.id:
                    enabled: true
                cloud.platform:
                    enabled: true
                cloud.provider:
                    enabled: true
                cloud.region:
                    enabled: true
                host.id:
                    enabled: true
                host.name:
                    enabled: true
            tags: []
        consul:
            address: ""
            datacenter: ""
            meta: {}
            namespace: ""
            resource_attributes:
                cloud.region:
                    enabled: true
                host.id:
                    enabled: true
                host.name:
                    enabled: true
            token: '[REDACTED]'
            token_file: ""
        detectors:
            - env
            - k8snode
            - kubeadm
        docker:
            resource_attributes:
                host.name:
                    enabled: true
                os.type:
                    enabled: true
        ec2:
            fail_on_missing_metadata: false
            max_attempts: 3
            max_backoff: 20s
            resource_attributes:
                cloud.account.id:
                    enabled: true
                cloud.availability_zone:
                    enabled: true
                cloud.platform:
                    enabled: true
                cloud.provider:
                    enabled: true
                cloud.region:
                    enabled: true
                host.id:
                    enabled: true
                host.image.id:
                    enabled: true
                host.name:
                    enabled: true
                host.type:
                    enabled: true
            tags: []
        ecs:
            resource_attributes:
                aws.ecs.cluster.arn:
                    enabled: true
                aws.ecs.launchtype:
                    enabled: true
                aws.ecs.task.arn:
                    enabled: true
                aws.ecs.task.family:
                    enabled: true
                aws.ecs.task.id:
                    enabled: true
                aws.ecs.task.revision:
                    enabled: true
                aws.log.group.arns:
                    enabled: true
                aws.log.group.names:
                    enabled: true
                aws.log.stream.arns:
                    enabled: true
                aws.log.stream.names:
                    enabled: true
                cloud.account.id:
                    enabled: true
                cloud.availability_zone:
                    enabled: true
                cloud.platform:
                    enabled: true
                cloud.provider:
                    enabled: true
                cloud.region:
                    enabled: true
        eks:
            node_from_env_var: ""
            resource_attributes:
                cloud.account.id:
                    enabled: false
                cloud.availability_zone:
                    enabled: false
                cloud.platform:
                    enabled: true
                cloud.provider:
                    enabled: true
                cloud.region:
                    enabled: false
                host.id:
                    enabled: false
                host.image.id:
                    enabled: false
                host.name:
                    enabled: false
                host.type:
                    enabled: false
                k8s.cluster.name:
                    enabled: false
        elasticbeanstalk:
            resource_attributes:
                cloud.platform:
                    enabled: true
                cloud.provider:
                    enabled: true
                deployment.environment:
                    enabled: true
                service.instance.id:
                    enabled: true
                service.version:
                    enabled: true
        gcp:
            resource_attributes:
                cloud.account.id:
                    enabled: true
                cloud.availability_zone:
                    enabled: true
                cloud.platform:
                    enabled: true
                cloud.provider:
                    enabled: true
                cloud.region:
                    enabled: true
                faas.id:
                    enabled: true
                faas.instance:
                    enabled: true
                faas.name:
                    enabled: true
                faas.version:
                    enabled: true
                gcp.cloud_run.job.execution:
                    enabled: true
                gcp.cloud_run.job.task_index:
                    enabled: true
                gcp.gce.instance.hostname:
                    enabled: false
                gcp.gce.instance.name:
                    enabled: false
                gcp.gce.instance_group_manager.name:
                    enabled: true
                gcp.gce.instance_group_manager.region:
                    enabled: true
                gcp.gce.instance_group_manager.zone:
                    enabled: true
                host.id:
                    enabled: true
                host.name:
                    enabled: true
                host.type:
                    enabled: true
                k8s.cluster.name:
                    enabled: true
        headers: {}
        heroku:
            resource_attributes:
                cloud.provider:
                    enabled: true
                heroku.app.id:
                    enabled: true
                heroku.dyno.id:
                    enabled: true
                heroku.release.commit:
                    enabled: true
                heroku.release.creation_timestamp:
                    enabled: true
                service.instance.id:
                    enabled: true
                service.name:
                    enabled: true
                service.version:
                    enabled: true
        idle_conn_timeout: 1m30s
        k8snode:
            auth_type: serviceAccount
            context: ""
            node_from_env_var: K8S_NODE_NAME
            resource_attributes:
                k8s.node.name:
                    enabled: true
                k8s.node.uid:
                    enabled: true
        kubeadm:
            auth_type: serviceAccount
            context: ""
            resource_attributes:
                k8s.cluster.name:
                    enabled: false
                k8s.cluster.uid:
                    enabled: true
        lambda:
            resource_attributes:
                aws.log.group.names:
                    enabled: true
                aws.log.stream.names:
                    enabled: true
                cloud.platform:
                    enabled: true
                cloud.provider:
                    enabled: true
                cloud.region:
                    enabled: true
                faas.instance:
                    enabled: true
                faas.max_memory:
                    enabled: true
                faas.name:
                    enabled: true
                faas.version:
                    enabled: true
        max_idle_conns: 100
        openshift:
            address: ""
            resource_attributes:
                cloud.platform:
                    enabled: true
                cloud.provider:
                    enabled: true
                cloud.region:
                    enabled: true
                k8s.cluster.name:
                    enabled: true
            tls: {}
            token: ""
        override: false
        system:
            hostname_sources: []
            resource_attributes:
                host.arch:
                    enabled: false
                host.cpu.cache.l2.size:
                    enabled: false
                host.cpu.family:
                    enabled: false
                host.cpu.model.id:
                    enabled: false
                host.cpu.model.name:
                    enabled: false
                host.cpu.stepping:
                    enabled: false
                host.cpu.vendor.id:
                    enabled: false
                host.id:
                    enabled: false
                host.interface:
                    enabled: false
                host.ip:
                    enabled: false
                host.mac:
                    enabled: false
                host.name:
                    enabled: true
                os.build.id:
                    enabled: false
                os.description:
                    enabled: false
                os.name:
                    enabled: false
                os.type:
                    enabled: true
                os.version:
                    enabled: false
        timeout: 2s
    transform:
        error_mode: ignore
        flatten_data: false
        log_statements:
            - conditions:
                - severity_number == 0 and IsString(body)
              context: log
              error_mode: ""
              statements:
                - set(severity_number, SEVERITY_NUMBER_TRACE) where IsMatch(body, "\\sTRACE\\s|(?i)\\[TRACE\\]|level=trace")
                - set(severity_number, SEVERITY_NUMBER_DEBUG) where IsMatch(body, "\\sDEBUG\\s|(?i)\\[DEBUG\\]|level=debug|\\[DBG\\]|^debug\\s")
                - set(severity_number, SEVERITY_NUMBER_INFO)  where IsMatch(body, "(?i)\\sINFO\\s|(?i)\\[INFO\\]|level=info")
                - set(severity_number, SEVERITY_NUMBER_WARN)  where IsMatch(body, "\\sWARN\\s|(?i)\\[WARN\\]|level=warn|\\|WARN\\||\\sWARNING\\s")
                - set(severity_number, SEVERITY_NUMBER_ERROR) where IsMatch(body, "\\sERROR\\s|(?i)\\[ERROR\\]|level=error|\\|ERR\\|")
                - set(severity_number, SEVERITY_NUMBER_FATAL) where IsMatch(body, "\\sFATAL\\s|(?i)\\[FATAL\\]|level=fatal")
        metric_statements: []
        trace_statements: []
    transform/syslog:
        error_mode: ignore
        flatten_data: false
        log_statements: []
        metric_statements: []
        trace_statements: []
receivers:
    filelog:
        attributes: {}
        encoding: utf-8
        exclude:
            - /var/log/pods/observability_otel-*_*/**/*.log
        exclude_older_than: 0s
        fingerprint_size: 1000
        force_flush_period: 500ms
        id: file_input
        include:
            - /var/log/pods/*/*/*.log
        include_file_path: true
        initial_buffer_size: 16384
        max_concurrent_files: 1024
        max_log_size: 1048576
        operators:
            - builder:
                add_metadata_from_filepath: true
                body: null
                format: ""
                id: container-parser
                if: ""
                max_log_size: 102400
                on_error: send
                output: []
                parse_from:
                    fieldinterface:
                        keys: []
                parse_to:
                    field:
                        fieldinterface:
                            keys: []
                type: container
        output: []
        poll_interval: 200ms
        resource: {}
        retry_on_failure:
            enabled: true
            initial_interval: 1s
            max_elapsed_time: 5m0s
            max_interval: 30s
        start_at: end
        storage: null
        type: file_input
    filelog/syslog:
        attributes: {}
        encoding: utf-8
        exclude_older_than: 0s
        fingerprint_size: 1000
        force_flush_period: 500ms
        id: file_input
        include:
            - /hostfs/var/log/syslog
        include_file_name: true
        include_file_path: true
        initial_buffer_size: 16384
        max_concurrent_files: 1024
        max_log_size: 1048576
        operators:
            - builder:
                allow_skip_pri_header: true
                body: null
                id: syslog-parser
                if: ""
                on_error: send
                output: []
                parse_from:
                    fieldinterface:
                        keys: []
                parse_to:
                    field:
                        fieldinterface:
                            keys: []
                protocol: rfc3164
                type: syslog_parser
        output: []
        poll_interval: 200ms
        resource: {}
        retry_on_failure:
            enabled: true
            initial_interval: 1s
            max_elapsed_time: 5m0s
            max_interval: 30s
        start_at: end
        storage: null
        type: file_input
    hostmetrics:
        collection_interval: 10s
        initial_delay: 1s
        metadata_collection_interval: 5m0s
        root_path: /hostfs
        timeout: 0s
    kubeletstats:
        auth_type: serviceAccount
        collect_all_network_interfaces:
            node: false
            pod: false
        collection_interval: 20s
        context: ""
        endpoint: 192.168.4.4:10250
        extra_metadata_labels: []
        initial_delay: 1s
        insecure_skip_verify: true
        k8s_api_config: null
        metric_groups:
            - container
            - pod
            - node
        metrics:
            container.cpu.time:
                enabled: true
            container.cpu.usage:
                enabled: true
            container.cpu.utilization:
                enabled: false
            container.filesystem.available:
                enabled: true
            container.filesystem.capacity:
                enabled: true
            container.filesystem.usage:
                enabled: true
            container.memory.available:
                enabled: true
            container.memory.major_page_faults:
                enabled: true
            container.memory.page_faults:
                enabled: true
            container.memory.rss:
                enabled: true
            container.memory.usage:
                enabled: true
            container.memory.working_set:
                enabled: true
            container.uptime:
                enabled: false
            k8s.container.cpu.node.utilization:
                enabled: false
            k8s.container.cpu_limit_utilization:
                enabled: false
            k8s.container.cpu_request_utilization:
                enabled: false
            k8s.container.memory.node.utilization:
                enabled: false
            k8s.container.memory_limit_utilization:
                enabled: false
            k8s.container.memory_request_utilization:
                enabled: false
            k8s.node.cpu.time:
                enabled: true
            k8s.node.cpu.usage:
                enabled: true
            k8s.node.cpu.utilization:
                enabled: false
            k8s.node.filesystem.available:
                enabled: true
            k8s.node.filesystem.capacity:
                enabled: true
            k8s.node.filesystem.usage:
                enabled: true
            k8s.node.memory.available:
                enabled: true
            k8s.node.memory.major_page_faults:
                enabled: true
            k8s.node.memory.page_faults:
                enabled: true
            k8s.node.memory.rss:
                enabled: true
            k8s.node.memory.usage:
                enabled: true
            k8s.node.memory.working_set:
                enabled: true
            k8s.node.network.errors:
                enabled: true
            k8s.node.network.io:
                enabled: true
            k8s.node.uptime:
                enabled: false
            k8s.pod.cpu.node.utilization:
                enabled: false
            k8s.pod.cpu.time:
                enabled: true
            k8s.pod.cpu.usage:
                enabled: true
            k8s.pod.cpu.utilization:
                enabled: false
            k8s.pod.cpu_limit_utilization:
                enabled: false
            k8s.pod.cpu_request_utilization:
                enabled: false
            k8s.pod.filesystem.available:
                enabled: true
            k8s.pod.filesystem.capacity:
                enabled: true
            k8s.pod.filesystem.usage:
                enabled: true
            k8s.pod.memory.available:
                enabled: true
            k8s.pod.memory.major_page_faults:
                enabled: true
            k8s.pod.memory.node.utilization:
                enabled: false
            k8s.pod.memory.page_faults:
                enabled: true
            k8s.pod.memory.rss:
                enabled: true
            k8s.pod.memory.usage:
                enabled: true
            k8s.pod.memory.working_set:
                enabled: true
            k8s.pod.memory_limit_utilization:
                enabled: false
            k8s.pod.memory_request_utilization:
                enabled: false
            k8s.pod.network.errors:
                enabled: true
            k8s.pod.network.io:
                enabled: true
            k8s.pod.uptime:
                enabled: false
            k8s.volume.available:
                enabled: true
            k8s.volume.capacity:
                enabled: true
            k8s.volume.inodes:
                enabled: true
            k8s.volume.inodes.free:
                enabled: true
            k8s.volume.inodes.used:
                enabled: true
        node: ""
        resource_attributes:
            aws.volume.id:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            container.id:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            fs.type:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            gce.pd.name:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            glusterfs.endpoints.name:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            glusterfs.path:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            k8s.container.name:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            k8s.namespace.name:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            k8s.node.name:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            k8s.persistentvolumeclaim.name:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            k8s.pod.name:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            k8s.pod.uid:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            k8s.volume.name:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            k8s.volume.type:
                enabled: true
                metrics_exclude: []
                metrics_include: []
            partition:
                enabled: true
                metrics_exclude: []
                metrics_include: []
        timeout: 0s
    otlp:
        protocols:
            grpc: {}
            http: {}
service:
    extensions:
        - health_check
        - pprof
        - zpages
        - opamp
    pipelines:
        logs:
            exporters:
                - debug
                - otlphttp/logs
            processors:
                - k8sattributes
                - resourcedetection
                - resource
                - transform
                - filter
                - batch
            receivers:
                - otlp
                - filelog
        logs/syslog:
            exporters:
                - debug
                - otlphttp/syslog
            processors:
                - resourcedetection
                - transform/syslog
                - batch
            receivers:
                - filelog/syslog
        metrics:
            exporters:
                - debug
                - otlphttp/metrics
            processors:
                - k8sattributes
                - resourcedetection
                - batch
            receivers:
                - otlp
                - hostmetrics
                - kubeletstats
        traces:
            exporters:
                - debug
                - otlphttp/traces
            processors:
                - k8sattributes
                - resourcedetection
                - resource
                - batch
            receivers:
                - otlp
    telemetry:
        logs:
            encoding: console
            error_output_paths:
                - stderr
            initial_fields:
                service: otel-agent
            level: info
            output_paths:
                - stderr
            sampling:
                enabled: true
                initial: 10
                thereafter: 100
                tick: 10s
        metrics:
            level: Basic
            readers:
                - periodic:
                    exporter:
                        otlp:
                            endpoint: http://metrics.intg-scp-kr.obv.cnct.cloud:4318
                            protocol: http/protobuf
